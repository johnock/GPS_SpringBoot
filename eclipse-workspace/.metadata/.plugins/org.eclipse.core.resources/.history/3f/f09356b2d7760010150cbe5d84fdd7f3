package com.example.findpathserver.controller;

import com.example.findpathserver.model.Course;
import com.example.findpathserver.model.CoursePoint;
import com.example.findpathserver.model.CoursePoi;
import com.example.findpathserver.service.CourseService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/courses")
public class CourseController {

    private final CourseService service;
    public CourseController(CourseService service) { this.service = service; }

    /** 1) 코스 메타 저장 (이전과 동일) */
    @PostMapping
    public ResponseEntity<Course> addCourse(@RequestBody Course course) {
        Course saved = service.save(course); // name/description/color/distanceKm...
        System.out.println("저장된 코스 ID = " + saved.getId());
        return ResponseEntity.ok(saved);
    }

    /** 2) 코스 목록 (메타만) */
    @GetMapping
    public ResponseEntity<List<Course>> list() {
        return ResponseEntity.ok(service.findAll());
    }

    /** 3) 해당 코스의 좌표 세트 저장(교체) */
    @PostMapping("/{courseId}/points")
    public ResponseEntity<Void> setPoints(
            @PathVariable Long courseId,
            @RequestBody List<CoursePoint> points
    ) {
        service.savePoints(courseId, points); // 기존 좌표 삭제 후 일괄 저장
        return ResponseEntity.ok().build();
    }

    /** 4) 해당 코스의 POI 세트 저장(교체) */
    @PostMapping("/{courseId}/pois")
    public ResponseEntity<Void> setPois(
            @PathVariable Long courseId,
            @RequestBody List<CoursePoi> pois
    ) {
        service.savePois(courseId, pois); // 기존 POI 삭제 후 일괄 저장
        return ResponseEntity.ok().build();
    }

    /** 5) 조회 (지도 그릴 때 사용) */
    @GetMapping("/{courseId}/points")
    public ResponseEntity<List<CoursePoint>> getPoints(@PathVariable Long courseId) {
        return ResponseEntity.ok(service.findPoints(courseId));
    }

    @GetMapping("/{courseId}/pois")
    public ResponseEntity<List<CoursePoi>> getPois(@PathVariable Long courseId) {
        return ResponseEntity.ok(service.findPois(courseId));
    }
}
